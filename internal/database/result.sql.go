// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: result.sql

package db

import (
	"context"
	"database/sql"

	"github.com/lib/pq"
)

const answerQuiz = `-- name: AnswerQuiz :one
INSERT INTO "result" (
  quiz_id, user_id, score, responses
) VALUES (
  $1, $2, $3, $4
) RETURNING id, quiz_id, user_id, sent_at, score, responses
`

type AnswerQuizParams struct {
	QuizID    int64         `json:"quiz_id"`
	UserID    int64         `json:"user_id"`
	Score     sql.NullInt32 `json:"score"`
	Responses []int32       `json:"responses"`
}

func (q *Queries) AnswerQuiz(ctx context.Context, arg AnswerQuizParams) (Result, error) {
	row := q.queryRow(ctx, q.answerQuizStmt, answerQuiz,
		arg.QuizID,
		arg.UserID,
		arg.Score,
		pq.Array(arg.Responses),
	)
	var i Result
	err := row.Scan(
		&i.ID,
		&i.QuizID,
		&i.UserID,
		&i.SentAt,
		&i.Score,
		pq.Array(&i.Responses),
	)
	return i, err
}

const insertScore = `-- name: InsertScore :one
UPDATE "result"
  SET score = $2
  WHERE id = $1
  RETURNING score
`

type InsertScoreParams struct {
	ID    int64         `json:"id"`
	Score sql.NullInt32 `json:"score"`
}

func (q *Queries) InsertScore(ctx context.Context, arg InsertScoreParams) (sql.NullInt32, error) {
	row := q.queryRow(ctx, q.insertScoreStmt, insertScore, arg.ID, arg.Score)
	var score sql.NullInt32
	err := row.Scan(&score)
	return score, err
}
